# Travis CI configuration file.
# @link https://travis-ci.org/

# Declare project language and PHP versions to test against.
# @link http://about.travis-ci.org/docs/user/languages/php/
language: php

# Ditch sudo and use containers.
# @link https://docs.travis-ci.com/user/ci-environment/
sudo: false

# Tell Travis CI which distro to use
dist: trusty

env:
  global:
    # WordPress Health Check Coding Standard test indicator.
    WP_WFP_CS_TEST=no
    WP_VERSION=latest
    WP_MULTISITE=0

# Create a matrix for testing against multiple PHP versions.
# We do this as the Health Check plugin should be available
# to all versions core supports.
matrix:
  include:
    - php: 7.3
      env: WP_WFP_CS_TEST=yes
    - php: 7.2
    - php: 7.2
      env: WP_VERSION=4.9
    - php: 7.1
    - php: 7.1
      env: WP_VERSION=4.0
    - php: 7.0
    - php: 7.0
      env: WP_VERSION=4.0
    - php: 5.6
    - php: 5.6
      env: WP_VERSION=4.0
    - php: 5.5
      env: WP_VERSION=5.1
    - php: 5.5
      env: WP_VERSION=4.0
    - php: 5.4
      env: WP_VERSION=5.1
    - php: 5.4
      env: WP_VERSION=4.0
    - php: 5.3
      dist: precise
      env: WP_VERSION=5.1
    - php: 5.3
      dist: precise
      env: WP_VERSION=4.0
    - php: 5.2
      dist: precise
      env: WP_VERSION=5.1
    - php: 5.2
      dist: precise
      env: WP_VERSION=4.0

# Setup NPM modules for Travis CI cache maintanence.
cache:
  apt: true

# Use this to prepare your build for testing.
# e.g. copy database configurations, environment variables, etc.
# Failures in this section will result in build status 'errored'.
before_script:
  - |
    # Remove Xdebug for a huge performance increase:
    if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
      phpenv config-rm xdebug.ini
    else
      echo "xdebug.ini does not exist"
    fi
  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  # Install phpunuit test suite
  - |
    if [[ ! -z "$WP_VERSION" ]] ; then
      bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
      if [[ ${TRAVIS_PHP_VERSION:0:3} == "5.2" ]]; then
        echo "Using default PHPUnit, hopefully 3.6"
      elif [[ ${TRAVIS_PHP_VERSION:0:3} == "5.6" ]]; then
        composer global require "phpunit/phpunit=5.7.*"
      elif [[ ${TRAVIS_PHP_VERSION:0:2} == "5." ]]; then
        composer global require "phpunit/phpunit=4.8.*"
      elif [[ ${TRAVIS_PHP_VERSION:0:2} == "7." && "${WP_VERSION}" == "4.0" ]]; then
        composer global require "phpunit/phpunit=5.7.*"
      else
        composer global require "phpunit/phpunit:^6"
      fi
    fi
  - which phpunit
  - phpunit --version
  # Only update composer with other dependencies from composer.json if we are doing CS tests.
  - |
    if [ "${WP_WFP_CS_TEST}" == "yes" ]; then
      composer update
    fi
# Run test script commands.
# Default is specific to project language.
# All commands must exit with code 0 on success. Anything else is considered failure.
script:
  # Change to the src folder
  - cd functions
  # Search for PHP syntax errors.
  - find . \( -name '*.php' \) -exec php -lf {} \;
  # Go back to the root before running further tests.
  - cd ..
  - phpunit